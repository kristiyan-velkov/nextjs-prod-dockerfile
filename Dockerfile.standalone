# ------------------------------
# Base Stage: Use a lightweight Node.js alpine image
# ------------------------------
FROM node:23.1.0-alpine AS base

# Set working directory
WORKDIR /app

# Leverage Docker cache by copying only package manager files
COPY package.json package-lock.json ./

# Install dependencies
RUN npm ci && npm cache clean --force

# ------------------------------
# Stage 2: Build the Next.js app
# ------------------------------
FROM base AS builder

# Copy installed dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy application source code
COPY . .

# Build the application in standalone mode
RUN npm run build

# ------------------------------
# Stage 3: Create Production Image
# ------------------------------
FROM node:23.1.0-alpine AS runner

# Set a non-root user for security
RUN addgroup --gid 1001 nodejs && \
    adduser --system --uid 1001 --ingroup nodejs nextjs

# Set environment variables
ENV NODE_ENV=production

# Set the working directory
WORKDIR /app

# Copy necessary files from builder stage
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/public ./public
COPY --from=deps /app/node_modules ./node_modules

# Ensure permissions for the non-root user
RUN chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Expose application port
EXPOSE 3000

# Run the application
CMD ["node", "server.js"]
