# =========================================
# Stage 1: Build the Next.js Application
# =========================================
ARG NODE_VERSION=23.8.0-alpine
ARG NGINX_VERSION=1.27.4-alpine

# Use a lightweight Node.js image for building (customizable via ARG)
FROM node:${NODE_VERSION} AS base

# Set the working directory inside the container
WORKDIR /app

# Copy package-related files first to leverage Docker's caching mechanism
COPY package.json package-lock.json ./

# Install project dependencies using npm ci (ensures a clean, reproducible install)
RUN npm ci

# Copy the rest of the application source code into the container
COPY . .

# Build the Next.js application for static export (outputs to /app/out)
RUN npm run build

# =========================================
# Stage 2: Prepare Nginx to Serve Static Files
# =========================================


FROM nginx:${NGINX_VERSION} AS runner

# Copy the static build output from the build stage to Nginx's default HTML serving directory
COPY --from=base /app/out /usr/share/nginx/html

# Expose port 80 to allow HTTP traffic
EXPOSE 80

# Start Nginx in the foreground to keep the container running
CMD ["nginx", "-g", "daemon off;"]
